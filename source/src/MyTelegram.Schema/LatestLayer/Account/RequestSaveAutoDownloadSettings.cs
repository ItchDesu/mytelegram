// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Account;

///<summary>
/// Change media autodownload settings
/// See <a href="https://corefork.telegram.org/method/account.saveAutoDownloadSettings" />
///</summary>
[TlObject(0x76f36233)]
public sealed class RequestSaveAutoDownloadSettings : IRequest<IBool>
{
    public uint ConstructorId => 0x76f36233;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public int Flags { get; set; }

    ///<summary>
    /// Whether to save media in the low data usage preset
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Low { get; set; }

    ///<summary>
    /// Whether to save media in the high data usage preset
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool High { get; set; }

    ///<summary>
    /// Media autodownload settings
    /// See <a href="https://corefork.telegram.org/type/AutoDownloadSettings" />
    ///</summary>
    public MyTelegram.Schema.IAutoDownloadSettings Settings { get; set; }

    public void ComputeFlag()
    {
        if (Low) { Flags = Flags.SetBit(0); }
        if (High) { Flags = Flags.SetBit(1); }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Settings);
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Flags = buffer.ReadInt32();
        if (Flags.IsBitSet(0)) { Low = true; }
        if (Flags.IsBitSet(1)) { High = true; }
        Settings = buffer.Read<MyTelegram.Schema.IAutoDownloadSettings>();
    }
}
