// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Auth;

///<summary>
/// Reset the <a href="https://corefork.telegram.org/api/srp">2FA password</a> using the recovery code sent using <a href="https://corefork.telegram.org/method/auth.requestPasswordRecovery">auth.requestPasswordRecovery</a>.
/// <para>Possible errors</para>
/// Code Type Description
/// 400 CODE_EMPTY The provided code is empty.
/// 400 NEW_SETTINGS_INVALID The new password settings are invalid.
/// See <a href="https://corefork.telegram.org/method/auth.recoverPassword" />
///</summary>
[TlObject(0x37096c70)]
public sealed class RequestRecoverPassword : IRequest<MyTelegram.Schema.Auth.IAuthorization>
{
    public uint ConstructorId => 0x37096c70;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public int Flags { get; set; }

    ///<summary>
    /// Code received via email
    ///</summary>
    public string Code { get; set; }

    ///<summary>
    /// New password
    /// See <a href="https://corefork.telegram.org/type/account.PasswordInputSettings" />
    ///</summary>
    public MyTelegram.Schema.Account.IPasswordInputSettings? NewSettings { get; set; }

    public void ComputeFlag()
    {
        if (NewSettings != null) { Flags = Flags.SetBit(0); }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Code);
        if (Flags.IsBitSet(0)) { writer.Write(NewSettings); }
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Flags = buffer.ReadInt32();
        Code = buffer.ReadString();
        if (Flags.IsBitSet(0)) { NewSettings = buffer.Read<MyTelegram.Schema.Account.IPasswordInputSettings>(); }
    }
}
