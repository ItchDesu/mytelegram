// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// See <a href="https://corefork.telegram.org/constructor/messageActionConferenceCall" />
///</summary>
[TlObject(0x2ffe2f7a)]
public sealed class TMessageActionConferenceCall : IMessageAction
{
    public uint ConstructorId => 0x2ffe2f7a;
    public int Flags { get; set; }
    public bool Missed { get; set; }
    public bool Active { get; set; }
    public bool Video { get; set; }
    public long CallId { get; set; }
    public int? Duration { get; set; }
    public TVector<MyTelegram.Schema.IPeer>? OtherParticipants { get; set; }

    public void ComputeFlag()
    {
        if (Missed) { Flags = Flags.SetBit(0); }
        if (Active) { Flags = Flags.SetBit(1); }
        if (Video) { Flags = Flags.SetBit(4); }
        if (/*Duration != 0 && */Duration.HasValue) { Flags = Flags.SetBit(2); }
        if (OtherParticipants?.Count > 0) { Flags = Flags.SetBit(3); }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(CallId);
        if (Flags.IsBitSet(2)) { writer.Write(Duration.Value); }
        if (Flags.IsBitSet(3)) { writer.Write(OtherParticipants); }
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Flags = buffer.ReadInt32();
        if (Flags.IsBitSet(0)) { Missed = true; }
        if (Flags.IsBitSet(1)) { Active = true; }
        if (Flags.IsBitSet(4)) { Video = true; }
        CallId = buffer.ReadInt64();
        if (Flags.IsBitSet(2)) { Duration = buffer.ReadInt32(); }
        if (Flags.IsBitSet(3)) { OtherParticipants = buffer.Read<TVector<MyTelegram.Schema.IPeer>>(); }
    }
}