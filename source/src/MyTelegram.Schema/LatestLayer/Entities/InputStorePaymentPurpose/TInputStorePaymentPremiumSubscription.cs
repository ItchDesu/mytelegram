// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Info about a Telegram Premium purchase
/// See <a href="https://corefork.telegram.org/constructor/inputStorePaymentPremiumSubscription" />
///</summary>
[TlObject(0xa6751e66)]
public sealed class TInputStorePaymentPremiumSubscription : IInputStorePaymentPurpose
{
    public uint ConstructorId => 0xa6751e66;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public int Flags { get; set; }

    ///<summary>
    /// Pass true if this is a restore of a Telegram Premium purchase; only for the App Store
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Restore { get; set; }

    ///<summary>
    /// Pass true if this is an upgrade from a monthly subscription to a yearly subscription; only for App Store
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Upgrade { get; set; }

    public void ComputeFlag()
    {
        if (Restore) { Flags = Flags.SetBit(0); }
        if (Upgrade) { Flags = Flags.SetBit(1); }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);

    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Flags = buffer.ReadInt32();
        if (Flags.IsBitSet(0)) { Restore = true; }
        if (Flags.IsBitSet(1)) { Upgrade = true; }
    }
}