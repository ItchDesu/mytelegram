// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// An <a href="https://corefork.telegram.org/api/emoji-categories">emoji category</a>, used to select all <a href="https://corefork.telegram.org/api/premium">Premium</a>-only stickers (i.e. those with a <a href="https://corefork.telegram.org/api/stickers#premium-animated-sticker-effects">Premium effect </a>)/<a href="https://corefork.telegram.org/api/premium">Premium</a>-only <a href="https://corefork.telegram.org/api/custom-emoji">custom emojis</a> (i.e. those where the <a href="https://corefork.telegram.org/constructor/documentAttributeCustomEmoji">documentAttributeCustomEmoji</a>.<code>free</code> flag is <strong>not</strong> set)
/// See <a href="https://corefork.telegram.org/constructor/emojiGroupPremium" />
///</summary>
[TlObject(0x93bcf34)]
public sealed class TEmojiGroupPremium : IEmojiGroup
{
    public uint ConstructorId => 0x93bcf34;
    ///<summary>
    /// Category name, i.e. "Animals", "Flags", "Faces" and so on...
    ///</summary>
    public string Title { get; set; }

    ///<summary>
    /// A single custom emoji used as preview for the category.
    ///</summary>
    public long IconEmojiId { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Title);
        writer.Write(IconEmojiId);
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Title = buffer.ReadString();
        IconEmojiId = buffer.ReadInt64();
    }
}