// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// How a certain peer reacted to the message
/// See <a href="https://corefork.telegram.org/constructor/messagePeerReaction" />
///</summary>
[TlObject(0x8c79b63c)]
public sealed class TMessagePeerReaction : IMessagePeerReaction
{
    public uint ConstructorId => 0x8c79b63c;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public int Flags { get; set; }

    ///<summary>
    /// Whether the specified <a href="https://corefork.telegram.org/api/reactions">message reaction </a> should elicit a bigger and longer reaction
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Big { get; set; }

    ///<summary>
    /// Whether the reaction wasn't yet marked as read by the current user
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Unread { get; set; }

    ///<summary>
    /// Starting from layer 159, <a href="https://corefork.telegram.org/method/messages.sendReaction">messages.sendReaction</a> will send reactions from the peer (user or channel) specified using <a href="https://corefork.telegram.org/method/messages.saveDefaultSendAs">messages.saveDefaultSendAs</a>. <br>If set, this flag indicates that this reaction was sent by us, even if the <code>peer</code> doesn't point to the current account.
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool My { get; set; }

    ///<summary>
    /// Peer that reacted to the message
    /// See <a href="https://corefork.telegram.org/type/Peer" />
    ///</summary>
    public MyTelegram.Schema.IPeer PeerId { get; set; }

    ///<summary>
    /// When was this reaction added
    ///</summary>
    public int Date { get; set; }

    ///<summary>
    /// Reaction emoji
    /// See <a href="https://corefork.telegram.org/type/Reaction" />
    ///</summary>
    public MyTelegram.Schema.IReaction Reaction { get; set; }

    public void ComputeFlag()
    {
        if (Big) { Flags = Flags.SetBit(0); }
        if (Unread) { Flags = Flags.SetBit(1); }
        if (My) { Flags = Flags.SetBit(2); }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(PeerId);
        writer.Write(Date);
        writer.Write(Reaction);
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Flags = buffer.ReadInt32();
        if (Flags.IsBitSet(0)) { Big = true; }
        if (Flags.IsBitSet(1)) { Unread = true; }
        if (Flags.IsBitSet(2)) { My = true; }
        PeerId = buffer.Read<MyTelegram.Schema.IPeer>();
        Date = buffer.ReadInt32();
        Reaction = buffer.Read<MyTelegram.Schema.IReaction>();
    }
}