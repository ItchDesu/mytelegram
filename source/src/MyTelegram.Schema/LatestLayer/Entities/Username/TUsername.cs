// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Contains information about a username.
/// See <a href="https://corefork.telegram.org/constructor/username" />
///</summary>
[TlObject(0xb4073647)]
public sealed class TUsername : IUsername
{
    public uint ConstructorId => 0xb4073647;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public int Flags { get; set; }

    ///<summary>
    /// Whether the username is editable, meaning it wasn't bought on <a href="https://fragment.com/">fragment</a>.
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Editable { get; set; }

    ///<summary>
    /// Whether the username is active.
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Active { get; set; }

    ///<summary>
    /// The username.
    ///</summary>
    public string Username { get; set; }

    public void ComputeFlag()
    {
        if (Editable) { Flags = Flags.SetBit(0); }
        if (Active) { Flags = Flags.SetBit(1); }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Username);
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Flags = buffer.ReadInt32();
        if (Flags.IsBitSet(0)) { Editable = true; }
        if (Flags.IsBitSet(1)) { Active = true; }
        Username = buffer.ReadString();
    }
}