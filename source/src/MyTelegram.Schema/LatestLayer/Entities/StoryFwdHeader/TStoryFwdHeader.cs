// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Contains info about the original poster of a reposted story.
/// See <a href="https://corefork.telegram.org/constructor/storyFwdHeader" />
///</summary>
[TlObject(0xb826e150)]
public sealed class TStoryFwdHeader : IStoryFwdHeader
{
    public uint ConstructorId => 0xb826e150;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public int Flags { get; set; }

    ///<summary>
    /// Whether the story media was modified before reposting it (for example by overlaying a round video with a reaction).
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Modified { get; set; }

    ///<summary>
    /// Peer that originally posted the story; will be empty for stories forwarded from a user with forwards privacy enabled, in which case <code>from_name</code> will be set, instead.
    /// See <a href="https://corefork.telegram.org/type/Peer" />
    ///</summary>
    public MyTelegram.Schema.IPeer? From { get; set; }

    ///<summary>
    /// Will be set for stories forwarded from a user with forwards privacy enabled, in which case <code>from</code> will also be empty.
    ///</summary>
    public string? FromName { get; set; }

    ///<summary>
    /// , contains the story ID
    ///</summary>
    public int? StoryId { get; set; }

    public void ComputeFlag()
    {
        if (Modified) { Flags = Flags.SetBit(3); }
        if (From != null) { Flags = Flags.SetBit(0); }
        if (FromName != null) { Flags = Flags.SetBit(1); }
        if (/*StoryId != 0 && */StoryId.HasValue) { Flags = Flags.SetBit(2); }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        if (Flags.IsBitSet(0)) { writer.Write(From); }
        if (Flags.IsBitSet(1)) { writer.Write(FromName); }
        if (Flags.IsBitSet(2)) { writer.Write(StoryId.Value); }
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Flags = buffer.ReadInt32();
        if (Flags.IsBitSet(3)) { Modified = true; }
        if (Flags.IsBitSet(0)) { From = buffer.Read<MyTelegram.Schema.IPeer>(); }
        if (Flags.IsBitSet(1)) { FromName = buffer.ReadString(); }
        if (Flags.IsBitSet(2)) { StoryId = buffer.ReadInt32(); }
    }
}