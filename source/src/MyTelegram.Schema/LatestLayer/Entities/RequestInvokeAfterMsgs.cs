// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Invokes a query after a successful completion of previous queries
/// See <a href="https://corefork.telegram.org/method/invokeAfterMsgs" />
///</summary>
[TlObject(0x3dc4b4f0)]
public sealed class RequestInvokeAfterMsgs : IRequest<IObject>, IHasSubQuery
{
    public uint ConstructorId => 0x3dc4b4f0;
    ///<summary>
    /// List of messages on which a current query depends
    ///</summary>
    public TVector<long> MsgIds { get; set; }

    ///<summary>
    /// The query itself
    ///</summary>
    public IObject Query { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(MsgIds);
        writer.Write(Query);
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        MsgIds = buffer.Read<TVector<long>>();
        Query = buffer.Read<IObject>();
    }
}
