// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema;

///<summary>
/// Represents a list of <a href="https://corefork.telegram.org/api/bots/attach">bot mini apps that can be launched from the attachment menu </a>
/// See <a href="https://corefork.telegram.org/constructor/attachMenuBots" />
///</summary>
[TlObject(0x3c4301c0)]
public sealed class TAttachMenuBots : IAttachMenuBots
{
    public uint ConstructorId => 0x3c4301c0;
    ///<summary>
    /// <a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash used for caching, for more info click here</a>
    ///</summary>
    public long Hash { get; set; }

    ///<summary>
    /// List of <a href="https://corefork.telegram.org/api/bots/attach">bot mini apps that can be launched from the attachment menu </a>
    ///</summary>
    public TVector<MyTelegram.Schema.IAttachMenuBot> Bots { get; set; }

    ///<summary>
    /// Info about related users/bots
    ///</summary>
    public TVector<MyTelegram.Schema.IUser> Users { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Hash);
        writer.Write(Bots);
        writer.Write(Users);
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Hash = buffer.ReadInt64();
        Bots = buffer.Read<TVector<MyTelegram.Schema.IAttachMenuBot>>();
        Users = buffer.Read<TVector<MyTelegram.Schema.IUser>>();
    }
}