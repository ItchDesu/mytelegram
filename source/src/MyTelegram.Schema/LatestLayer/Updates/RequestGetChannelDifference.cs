// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Updates;

///<summary>
/// Returns the difference between the current state of updates of a certain channel and transmitted.
/// <para>Possible errors</para>
/// Code Type Description
/// 400 CHANNEL_INVALID The provided channel is invalid.
/// 406 CHANNEL_PRIVATE You haven't joined this channel/supergroup.
/// 403 CHANNEL_PUBLIC_GROUP_NA channel/supergroup not available.
/// 403 CHAT_WRITE_FORBIDDEN You can't write in this chat.
/// 400 FROM_MESSAGE_BOT_DISABLED Bots can't use fromMessage min constructors.
/// 400 MSG_ID_INVALID Invalid message ID provided.
/// 400 PERSISTENT_TIMESTAMP_EMPTY Persistent timestamp empty.
/// 400 PERSISTENT_TIMESTAMP_INVALID Persistent timestamp invalid.
/// 500 PERSISTENT_TIMESTAMP_OUTDATED Channel internal replication issues, try again later (treat this like an RPC_CALL_FAIL).
/// 400 PINNED_DIALOGS_TOO_MUCH Too many pinned dialogs.
/// 400 RANGES_INVALID Invalid range provided.
/// 400 USER_BANNED_IN_CHANNEL You're banned from sending messages in supergroups/channels.
/// See <a href="https://corefork.telegram.org/method/updates.getChannelDifference" />
///</summary>
[TlObject(0x3173d78)]
public sealed class RequestGetChannelDifference : IRequest<MyTelegram.Schema.Updates.IChannelDifference>
{
    public uint ConstructorId => 0x3173d78;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public int Flags { get; set; }

    ///<summary>
    /// Set to true to skip some possibly unneeded updates and reduce server-side load
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool Force { get; set; }

    ///<summary>
    /// The channel
    /// See <a href="https://corefork.telegram.org/type/InputChannel" />
    ///</summary>
    public MyTelegram.Schema.IInputChannel Channel { get; set; }

    ///<summary>
    /// Messsage filter
    /// See <a href="https://corefork.telegram.org/type/ChannelMessagesFilter" />
    ///</summary>
    public MyTelegram.Schema.IChannelMessagesFilter Filter { get; set; }

    ///<summary>
    /// Persistent timestamp (see <a href="https://corefork.telegram.org/api/updates">updates</a>)
    ///</summary>
    public int Pts { get; set; }

    ///<summary>
    /// How many updates to fetch, max <code>100000</code><br>Ordinary (non-bot) users are supposed to pass <code>10-100</code>
    ///</summary>
    public int Limit { get; set; }

    public void ComputeFlag()
    {
        if (Force) { Flags = Flags.SetBit(0); }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(Channel);
        writer.Write(Filter);
        writer.Write(Pts);
        writer.Write(Limit);
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Flags = buffer.ReadInt32();
        if (Flags.IsBitSet(0)) { Force = true; }
        Channel = buffer.Read<MyTelegram.Schema.IInputChannel>();
        Filter = buffer.Read<MyTelegram.Schema.IChannelMessagesFilter>();
        Pts = buffer.ReadInt32();
        Limit = buffer.ReadInt32();
    }
}
