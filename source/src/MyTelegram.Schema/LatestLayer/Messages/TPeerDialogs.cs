// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Messages;

///<summary>
/// Dialog info of multiple peers
/// See <a href="https://corefork.telegram.org/constructor/messages.peerDialogs" />
///</summary>
[TlObject(0x3371c354)]
public sealed class TPeerDialogs : IPeerDialogs
{
    public uint ConstructorId => 0x3371c354;
    ///<summary>
    /// Dialog info
    ///</summary>
    public TVector<MyTelegram.Schema.IDialog> Dialogs { get; set; }

    ///<summary>
    /// Messages mentioned in dialog info
    ///</summary>
    public TVector<MyTelegram.Schema.IMessage> Messages { get; set; }

    ///<summary>
    /// Chats
    ///</summary>
    public TVector<MyTelegram.Schema.IChat> Chats { get; set; }

    ///<summary>
    /// Users
    ///</summary>
    public TVector<MyTelegram.Schema.IUser> Users { get; set; }

    ///<summary>
    /// Current <a href="https://corefork.telegram.org/api/updates">update state of dialog</a>
    /// See <a href="https://corefork.telegram.org/type/updates.State" />
    ///</summary>
    public MyTelegram.Schema.Updates.IState State { get; set; }

    public void ComputeFlag()
    {

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Dialogs);
        writer.Write(Messages);
        writer.Write(Chats);
        writer.Write(Users);
        writer.Write(State);
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Dialogs = buffer.Read<TVector<MyTelegram.Schema.IDialog>>();
        Messages = buffer.Read<TVector<MyTelegram.Schema.IMessage>>();
        Chats = buffer.Read<TVector<MyTelegram.Schema.IChat>>();
        Users = buffer.Read<TVector<MyTelegram.Schema.IUser>>();
        State = buffer.Read<MyTelegram.Schema.Updates.IState>();
    }
}