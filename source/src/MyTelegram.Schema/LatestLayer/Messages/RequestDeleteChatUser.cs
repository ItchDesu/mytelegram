// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Messages;

///<summary>
/// Deletes a user from a chat and sends a service message on it.
/// <para>Possible errors</para>
/// Code Type Description
/// 400 CHAT_ADMIN_REQUIRED You must be an admin in this chat to do this.
/// 400 CHAT_ID_INVALID The provided chat id is invalid.
/// 400 PEER_ID_INVALID The provided peer id is invalid.
/// 400 USER_ID_INVALID The provided user ID is invalid.
/// 400 USER_NOT_PARTICIPANT You're not a member of this supergroup/channel.
/// See <a href="https://corefork.telegram.org/method/messages.deleteChatUser" />
///</summary>
[TlObject(0xa2185cab)]
public sealed class RequestDeleteChatUser : IRequest<MyTelegram.Schema.IUpdates>
{
    public uint ConstructorId => 0xa2185cab;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public int Flags { get; set; }

    ///<summary>
    /// Remove the entire chat history of the specified user in this chat.
    /// See <a href="https://corefork.telegram.org/type/true" />
    ///</summary>
    public bool RevokeHistory { get; set; }

    ///<summary>
    /// Chat ID
    ///</summary>
    public long ChatId { get; set; }

    ///<summary>
    /// User ID to be deleted
    /// See <a href="https://corefork.telegram.org/type/InputUser" />
    ///</summary>
    public MyTelegram.Schema.IInputUser UserId { get; set; }

    public void ComputeFlag()
    {
        if (RevokeHistory) { Flags = Flags.SetBit(0); }

    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(ChatId);
        writer.Write(UserId);
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Flags = buffer.ReadInt32();
        if (Flags.IsBitSet(0)) { RevokeHistory = true; }
        ChatId = buffer.ReadInt64();
        UserId = buffer.Read<MyTelegram.Schema.IInputUser>();
    }
}
