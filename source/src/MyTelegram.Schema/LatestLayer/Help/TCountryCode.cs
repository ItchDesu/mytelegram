// <auto-generated/>
// ReSharper disable All

namespace MyTelegram.Schema.Help;

///<summary>
/// Country code and phone number pattern of a specific country
/// See <a href="https://corefork.telegram.org/constructor/help.countryCode" />
///</summary>
[TlObject(0x4203c5ef)]
public sealed class TCountryCode : ICountryCode
{
    public uint ConstructorId => 0x4203c5ef;
    ///<summary>
    /// Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a>
    ///</summary>
    public int Flags { get; set; }

    ///<summary>
    /// ISO country code
    ///</summary>
    public string CountryCode { get; set; }

    ///<summary>
    /// Possible phone prefixes
    ///</summary>
    public TVector<string>? Prefixes { get; set; }

    ///<summary>
    /// Phone patterns: for example, <code>XXX XXX XXX</code>
    ///</summary>
    public TVector<string>? Patterns { get; set; }

    public void ComputeFlag()
    {
        if (Prefixes?.Count > 0) { Flags = Flags.SetBit(0); }
        if (Patterns?.Count > 0) { Flags = Flags.SetBit(1); }
    }

    public void Serialize(IBufferWriter<byte> writer)
    {
        ComputeFlag();
        writer.Write(ConstructorId);
        writer.Write(Flags);
        writer.Write(CountryCode);
        if (Flags.IsBitSet(0)) { writer.Write(Prefixes); }
        if (Flags.IsBitSet(1)) { writer.Write(Patterns); }
    }

    public void Deserialize(ref ReadOnlyMemory<byte> buffer)
    {
        Flags = buffer.ReadInt32();
        CountryCode = buffer.ReadString();
        if (Flags.IsBitSet(0)) { Prefixes = buffer.Read<TVector<string>>(); }
        if (Flags.IsBitSet(1)) { Patterns = buffer.Read<TVector<string>>(); }
    }
}